apiVersion: v1
kind: Service
metadata:
  name: mysql-svc
  labels:
    app: mysql-svc
spec:
  ports:
  - port: 80
    name: mysql
  clusterIP: None
  selector:
    app: mysql-svc
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  serviceName: "mysql-svc"
  replicas: 2 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: mysql # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mysql
        image: mysql:latest
        ports:
        - containerPort: 80
          name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secret-q10
              key: root_pass
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: secret-q10
              key: db
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secret-q10
              key: pass
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: secret-q10
              key: user
        volumeMounts:
        - name: volMounts
          mountPath: /var/lib/mysql
  volumeClaimTemplates:
  - metadata:
      name: volMounts
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "local-path"
      resources:
        requests:
          storage: 1Gi